* What are we going to do? 
Learn how to add and share behavior across classes with Mixins.
Learn how to avoid name conflicts in code bases.

* Why are we going to do this?
Because we don't want to repeat a lot of code over and over in the
code base. We want one place to define behavior.

And we do not want class name conflicts

* How do this relate ?
We learned about Objects and Inheritence and but there are limitations
of using these ways to construct a coherent and easy to change code
base.


Caveat: These techinques are use to reduce technical debt and it's
tough to see how they help out with these small examples.



